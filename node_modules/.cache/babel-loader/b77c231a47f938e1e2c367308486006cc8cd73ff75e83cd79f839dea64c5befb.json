{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.content_v2_1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar content_v2_1;\n(function (content_v2_1) {\n  /**\n   * Content API for Shopping\n   *\n   * Manage your product listings and accounts for Google Shopping\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const content = google.content('v2.1');\n   * ```\n   */\n  class Content {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.accountstatuses = new Resource$Accountstatuses(this.context);\n      this.accounttax = new Resource$Accounttax(this.context);\n      this.buyongoogleprograms = new Resource$Buyongoogleprograms(this.context);\n      this.collections = new Resource$Collections(this.context);\n      this.collectionstatuses = new Resource$Collectionstatuses(this.context);\n      this.conversionsources = new Resource$Conversionsources(this.context);\n      this.csses = new Resource$Csses(this.context);\n      this.datafeeds = new Resource$Datafeeds(this.context);\n      this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n      this.freelistingsprogram = new Resource$Freelistingsprogram(this.context);\n      this.liasettings = new Resource$Liasettings(this.context);\n      this.localinventory = new Resource$Localinventory(this.context);\n      this.merchantsupport = new Resource$Merchantsupport(this.context);\n      this.orderinvoices = new Resource$Orderinvoices(this.context);\n      this.orderreports = new Resource$Orderreports(this.context);\n      this.orderreturns = new Resource$Orderreturns(this.context);\n      this.orders = new Resource$Orders(this.context);\n      this.ordertrackingsignals = new Resource$Ordertrackingsignals(this.context);\n      this.pos = new Resource$Pos(this.context);\n      this.productdeliverytime = new Resource$Productdeliverytime(this.context);\n      this.products = new Resource$Products(this.context);\n      this.productstatuses = new Resource$Productstatuses(this.context);\n      this.promotions = new Resource$Promotions(this.context);\n      this.pubsubnotificationsettings = new Resource$Pubsubnotificationsettings(this.context);\n      this.quotas = new Resource$Quotas(this.context);\n      this.recommendations = new Resource$Recommendations(this.context);\n      this.regionalinventory = new Resource$Regionalinventory(this.context);\n      this.regions = new Resource$Regions(this.context);\n      this.reports = new Resource$Reports(this.context);\n      this.repricingrules = new Resource$Repricingrules(this.context);\n      this.returnaddress = new Resource$Returnaddress(this.context);\n      this.returnpolicy = new Resource$Returnpolicy(this.context);\n      this.returnpolicyonline = new Resource$Returnpolicyonline(this.context);\n      this.settlementreports = new Resource$Settlementreports(this.context);\n      this.settlementtransactions = new Resource$Settlementtransactions(this.context);\n      this.shippingsettings = new Resource$Shippingsettings(this.context);\n      this.shoppingadsprogram = new Resource$Shoppingadsprogram(this.context);\n    }\n  }\n  content_v2_1.Content = Content;\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.credentials = new Resource$Accounts$Credentials(this.context);\n      this.labels = new Resource$Accounts$Labels(this.context);\n      this.returncarrier = new Resource$Accounts$Returncarrier(this.context);\n    }\n    authinfo(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    link(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    listlinks(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/listlinks').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestphoneverification(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/requestphoneverification').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    verifyphonenumber(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/verifyphonenumber').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accounts = Resource$Accounts;\n  class Resource$Accounts$Credentials {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/credentials').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accounts$Credentials = Resource$Accounts$Credentials;\n  class Resource$Accounts$Labels {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'labelId'],\n        pathParams: ['accountId', 'labelId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'labelId'],\n        pathParams: ['accountId', 'labelId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accounts$Labels = Resource$Accounts$Labels;\n  class Resource$Accounts$Returncarrier {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier/{carrierAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'carrierAccountId'],\n        pathParams: ['accountId', 'carrierAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['accountId'],\n        pathParams: ['accountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier/{carrierAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['accountId', 'carrierAccountId'],\n        pathParams: ['accountId', 'carrierAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accounts$Returncarrier = Resource$Accounts$Returncarrier;\n  class Resource$Accountstatuses {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n  class Resource$Accounttax {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Accounttax = Resource$Accounttax;\n  class Resource$Buyongoogleprograms {\n    constructor(context) {\n      this.context = context;\n    }\n    activate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/activate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    onboard(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/onboard').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    pause(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/pause').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestreview(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionCode'],\n        pathParams: ['merchantId', 'regionCode'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Buyongoogleprograms = Resource$Buyongoogleprograms;\n  class Resource$Collections {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collections').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collections/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'collectionId'],\n        pathParams: ['collectionId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collections/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'collectionId'],\n        pathParams: ['collectionId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collections').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Collections = Resource$Collections;\n  class Resource$Collectionstatuses {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collectionstatuses/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'collectionId'],\n        pathParams: ['collectionId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/collectionstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Collectionstatuses = Resource$Collectionstatuses;\n  class Resource$Conversionsources {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'conversionSourceId'],\n        pathParams: ['conversionSourceId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'conversionSourceId'],\n        pathParams: ['conversionSourceId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'conversionSourceId'],\n        pathParams: ['conversionSourceId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    undelete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}:undelete').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'conversionSourceId'],\n        pathParams: ['conversionSourceId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Conversionsources = Resource$Conversionsources;\n  class Resource$Csses {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['cssGroupId', 'cssDomainId'],\n        pathParams: ['cssDomainId', 'cssGroupId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{cssGroupId}/csses').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['cssGroupId'],\n        pathParams: ['cssGroupId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['cssGroupId', 'cssDomainId'],\n        pathParams: ['cssDomainId', 'cssGroupId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Csses = Resource$Csses;\n  class Resource$Datafeeds {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'datafeedId'],\n        pathParams: ['datafeedId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'datafeedId'],\n        pathParams: ['datafeedId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'datafeedId'],\n        pathParams: ['datafeedId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'datafeedId'],\n        pathParams: ['datafeedId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n  class Resource$Datafeedstatuses {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'datafeedId'],\n        pathParams: ['datafeedId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n  class Resource$Freelistingsprogram {\n    constructor(context) {\n      this.context = context;\n      this.checkoutsettings = new Resource$Freelistingsprogram$Checkoutsettings(this.context);\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestreview(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Freelistingsprogram = Resource$Freelistingsprogram;\n  class Resource$Freelistingsprogram$Checkoutsettings {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Freelistingsprogram$Checkoutsettings = Resource$Freelistingsprogram$Checkoutsettings;\n  class Resource$Liasettings {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId', 'country'],\n        pathParams: ['accountId', 'country', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId', 'country', 'language', 'contactName', 'contactEmail'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setomnichannelexperience(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setomnichannelexperience').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId', 'country'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Liasettings = Resource$Liasettings;\n  class Resource$Localinventory {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/localinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}/localinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Localinventory = Resource$Localinventory;\n  class Resource$Merchantsupport {\n    constructor(context) {\n      this.context = context;\n    }\n    renderaccountissues(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/merchantsupport/renderaccountissues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    renderproductissues(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/merchantsupport/renderproductissues/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Merchantsupport = Resource$Merchantsupport;\n  class Resource$Orderinvoices {\n    constructor(context) {\n      this.context = context;\n    }\n    createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n  class Resource$Orderreports {\n    constructor(context) {\n      this.context = context;\n    }\n    listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'disbursementId'],\n        pathParams: ['disbursementId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Orderreports = Resource$Orderreports;\n  class Resource$Orderreturns {\n    constructor(context) {\n      this.context = context;\n      this.labels = new Resource$Orderreturns$Labels(this.context);\n    }\n    acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnId'],\n        pathParams: ['merchantId', 'returnId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    createorderreturn(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/createOrderReturn').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnId'],\n        pathParams: ['merchantId', 'returnId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    process(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}/process').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnId'],\n        pathParams: ['merchantId', 'returnId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n  class Resource$Orderreturns$Labels {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnId'],\n        pathParams: ['merchantId', 'returnId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Orderreturns$Labels = Resource$Orderreturns$Labels;\n  class Resource$Orders {\n    constructor(context) {\n      this.context = context;\n    }\n    acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    cancel(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    captureOrder(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/captureOrder').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'merchantOrderId'],\n        pathParams: ['merchantId', 'merchantOrderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'templateName'],\n        pathParams: ['merchantId', 'templateName'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    refunditem(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refunditem').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    refundorder(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refundorder').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'orderId'],\n        pathParams: ['merchantId', 'orderId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Orders = Resource$Orders;\n  class Resource$Ordertrackingsignals {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/ordertrackingsignals').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Ordertrackingsignals = Resource$Ordertrackingsignals;\n  class Resource$Pos {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n        pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n        pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId'],\n        pathParams: ['merchantId', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    inventory(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId'],\n        pathParams: ['merchantId', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId'],\n        pathParams: ['merchantId', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    sale(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'targetMerchantId'],\n        pathParams: ['merchantId', 'targetMerchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Pos = Resource$Pos;\n  class Resource$Productdeliverytime {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productdeliverytime').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productdeliverytime/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productdeliverytime/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Productdeliverytime = Resource$Productdeliverytime;\n  class Resource$Products {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Products = Resource$Products;\n  class Resource$Productstatuses {\n    constructor(context) {\n      this.context = context;\n      this.repricingreports = new Resource$Productstatuses$Repricingreports(this.context);\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n  class Resource$Productstatuses$Repricingreports {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}/repricingreports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Productstatuses$Repricingreports = Resource$Productstatuses$Repricingreports;\n  class Resource$Promotions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/promotions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/promotions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'id'],\n        pathParams: ['id', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/promotions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Promotions = Resource$Promotions;\n  class Resource$Pubsubnotificationsettings {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Pubsubnotificationsettings = Resource$Pubsubnotificationsettings;\n  class Resource$Quotas {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/quotas').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Quotas = Resource$Quotas;\n  class Resource$Recommendations {\n    constructor(context) {\n      this.context = context;\n    }\n    generate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/recommendations/generate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    reportInteraction(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/recommendations/reportInteraction').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Recommendations = Resource$Recommendations;\n  class Resource$Regionalinventory {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/regionalinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}/regionalinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'productId'],\n        pathParams: ['merchantId', 'productId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n  class Resource$Regions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionId'],\n        pathParams: ['merchantId', 'regionId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionId'],\n        pathParams: ['merchantId', 'regionId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'regionId'],\n        pathParams: ['merchantId', 'regionId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Regions = Resource$Regions;\n  class Resource$Reports {\n    constructor(context) {\n      this.context = context;\n    }\n    search(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/reports/search').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Reports = Resource$Reports;\n  class Resource$Repricingrules {\n    constructor(context) {\n      this.context = context;\n      this.repricingreports = new Resource$Repricingrules$Repricingreports(this.context);\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'ruleId'],\n        pathParams: ['merchantId', 'ruleId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'ruleId'],\n        pathParams: ['merchantId', 'ruleId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'ruleId'],\n        pathParams: ['merchantId', 'ruleId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Repricingrules = Resource$Repricingrules;\n  class Resource$Repricingrules$Repricingreports {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}/repricingreports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'ruleId'],\n        pathParams: ['merchantId', 'ruleId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Repricingrules$Repricingreports = Resource$Repricingrules$Repricingreports;\n  class Resource$Returnaddress {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/returnaddress/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnAddressId'],\n        pathParams: ['merchantId', 'returnAddressId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnAddressId'],\n        pathParams: ['merchantId', 'returnAddressId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Returnaddress = Resource$Returnaddress;\n  class Resource$Returnpolicy {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/returnpolicy/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnPolicyId'],\n        pathParams: ['merchantId', 'returnPolicyId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnPolicyId'],\n        pathParams: ['merchantId', 'returnPolicyId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Returnpolicy = Resource$Returnpolicy;\n  class Resource$Returnpolicyonline {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnPolicyId'],\n        pathParams: ['merchantId', 'returnPolicyId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnPolicyId'],\n        pathParams: ['merchantId', 'returnPolicyId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'returnPolicyId'],\n        pathParams: ['merchantId', 'returnPolicyId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Returnpolicyonline = Resource$Returnpolicyonline;\n  class Resource$Settlementreports {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports/{settlementId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'settlementId'],\n        pathParams: ['merchantId', 'settlementId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Settlementreports = Resource$Settlementreports;\n  class Resource$Settlementtransactions {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'settlementId'],\n        pathParams: ['merchantId', 'settlementId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Settlementtransactions = Resource$Settlementtransactions;\n  class Resource$Shippingsettings {\n    constructor(context) {\n      this.context = context;\n    }\n    custombatch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['merchantId', 'accountId'],\n        pathParams: ['accountId', 'merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n  class Resource$Shoppingadsprogram {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/shoppingadsprogram').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    requestreview(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/content/v2.1/{merchantId}/shoppingadsprogram/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['merchantId'],\n        pathParams: ['merchantId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  content_v2_1.Resource$Shoppingadsprogram = Resource$Shoppingadsprogram;\n})(content_v2_1 || (exports.content_v2_1 = content_v2_1 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","content_v2_1","googleapis_common_1","require","Content","constructor","options","google","context","_options","accounts","Resource$Accounts","accountstatuses","Resource$Accountstatuses","accounttax","Resource$Accounttax","buyongoogleprograms","Resource$Buyongoogleprograms","collections","Resource$Collections","collectionstatuses","Resource$Collectionstatuses","conversionsources","Resource$Conversionsources","csses","Resource$Csses","datafeeds","Resource$Datafeeds","datafeedstatuses","Resource$Datafeedstatuses","freelistingsprogram","Resource$Freelistingsprogram","liasettings","Resource$Liasettings","localinventory","Resource$Localinventory","merchantsupport","Resource$Merchantsupport","orderinvoices","Resource$Orderinvoices","orderreports","Resource$Orderreports","orderreturns","Resource$Orderreturns","orders","Resource$Orders","ordertrackingsignals","Resource$Ordertrackingsignals","pos","Resource$Pos","productdeliverytime","Resource$Productdeliverytime","products","Resource$Products","productstatuses","Resource$Productstatuses","promotions","Resource$Promotions","pubsubnotificationsettings","Resource$Pubsubnotificationsettings","quotas","Resource$Quotas","recommendations","Resource$Recommendations","regionalinventory","Resource$Regionalinventory","regions","Resource$Regions","reports","Resource$Reports","repricingrules","Resource$Repricingrules","returnaddress","Resource$Returnaddress","returnpolicy","Resource$Returnpolicy","returnpolicyonline","Resource$Returnpolicyonline","settlementreports","Resource$Settlementreports","settlementtransactions","Resource$Settlementtransactions","shippingsettings","Resource$Shippingsettings","shoppingadsprogram","Resource$Shoppingadsprogram","credentials","Resource$Accounts$Credentials","labels","Resource$Accounts$Labels","returncarrier","Resource$Accounts$Returncarrier","authinfo","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","claimwebsite","custombatch","delete","get","insert","link","list","listlinks","requestphoneverification","update","updatelabels","verifyphonenumber","create","patch","activate","onboard","pause","requestreview","undelete","fetchnow","checkoutsettings","Resource$Freelistingsprogram$Checkoutsettings","getaccessiblegmbaccounts","listposdataproviders","requestgmbaccess","requestinventoryverification","setinventoryverificationcontact","setomnichannelexperience","setposdataprovider","renderaccountissues","renderproductissues","createchargeinvoice","createrefundinvoice","listdisbursements","listtransactions","Resource$Orderreturns$Labels","acknowledge","createorderreturn","process","advancetestorder","cancel","cancellineitem","canceltestorderbycustomer","captureOrder","createtestorder","createtestreturn","getbymerchantorderid","gettestordertemplate","instorerefundlineitem","refunditem","refundorder","rejectreturnlineitem","returnrefundlineitem","setlineitemmetadata","shiplineitems","updatelineitemshippingdetails","updatemerchantorderid","updateshipment","inventory","sale","repricingreports","Resource$Productstatuses$Repricingreports","generate","reportInteraction","search","Resource$Repricingrules$Repricingreports","getsupportedcarriers","getsupportedholidays","getsupportedpickupservices"],"sources":["/home/nomade00/Área de Trabalho/Trabalho James/trabcar/node_modules/googleapis/build/src/apis/content/v2.1.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.content_v2_1 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar content_v2_1;\n(function (content_v2_1) {\n    /**\n     * Content API for Shopping\n     *\n     * Manage your product listings and accounts for Google Shopping\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const content = google.content('v2.1');\n     * ```\n     */\n    class Content {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountstatuses = new Resource$Accountstatuses(this.context);\n            this.accounttax = new Resource$Accounttax(this.context);\n            this.buyongoogleprograms = new Resource$Buyongoogleprograms(this.context);\n            this.collections = new Resource$Collections(this.context);\n            this.collectionstatuses = new Resource$Collectionstatuses(this.context);\n            this.conversionsources = new Resource$Conversionsources(this.context);\n            this.csses = new Resource$Csses(this.context);\n            this.datafeeds = new Resource$Datafeeds(this.context);\n            this.datafeedstatuses = new Resource$Datafeedstatuses(this.context);\n            this.freelistingsprogram = new Resource$Freelistingsprogram(this.context);\n            this.liasettings = new Resource$Liasettings(this.context);\n            this.localinventory = new Resource$Localinventory(this.context);\n            this.merchantsupport = new Resource$Merchantsupport(this.context);\n            this.orderinvoices = new Resource$Orderinvoices(this.context);\n            this.orderreports = new Resource$Orderreports(this.context);\n            this.orderreturns = new Resource$Orderreturns(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.ordertrackingsignals = new Resource$Ordertrackingsignals(this.context);\n            this.pos = new Resource$Pos(this.context);\n            this.productdeliverytime = new Resource$Productdeliverytime(this.context);\n            this.products = new Resource$Products(this.context);\n            this.productstatuses = new Resource$Productstatuses(this.context);\n            this.promotions = new Resource$Promotions(this.context);\n            this.pubsubnotificationsettings = new Resource$Pubsubnotificationsettings(this.context);\n            this.quotas = new Resource$Quotas(this.context);\n            this.recommendations = new Resource$Recommendations(this.context);\n            this.regionalinventory = new Resource$Regionalinventory(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.repricingrules = new Resource$Repricingrules(this.context);\n            this.returnaddress = new Resource$Returnaddress(this.context);\n            this.returnpolicy = new Resource$Returnpolicy(this.context);\n            this.returnpolicyonline = new Resource$Returnpolicyonline(this.context);\n            this.settlementreports = new Resource$Settlementreports(this.context);\n            this.settlementtransactions = new Resource$Settlementtransactions(this.context);\n            this.shippingsettings = new Resource$Shippingsettings(this.context);\n            this.shoppingadsprogram = new Resource$Shoppingadsprogram(this.context);\n        }\n    }\n    content_v2_1.Content = Content;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.credentials = new Resource$Accounts$Credentials(this.context);\n            this.labels = new Resource$Accounts$Labels(this.context);\n            this.returncarrier = new Resource$Accounts$Returncarrier(this.context);\n        }\n        authinfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/authinfo').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        claimwebsite(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        link(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}/link').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listlinks(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/listlinks').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestphoneverification(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/requestphoneverification').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounts/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        verifyphonenumber(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/accounts/{accountId}/verifyphonenumber').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Credentials {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/credentials').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts$Credentials = Resource$Accounts$Credentials;\n    class Resource$Accounts$Labels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'labelId'],\n                pathParams: ['accountId', 'labelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/labels/{labelId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'labelId'],\n                pathParams: ['accountId', 'labelId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts$Labels = Resource$Accounts$Labels;\n    class Resource$Accounts$Returncarrier {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/accounts/{accountId}/returncarrier/{carrierAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'carrierAccountId'],\n                pathParams: ['accountId', 'carrierAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounts/{accountId}/returncarrier').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['accountId'],\n                pathParams: ['accountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/accounts/{accountId}/returncarrier/{carrierAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['accountId', 'carrierAccountId'],\n                pathParams: ['accountId', 'carrierAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounts$Returncarrier = Resource$Accounts$Returncarrier;\n    class Resource$Accountstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accountstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accountstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accountstatuses = Resource$Accountstatuses;\n    class Resource$Accounttax {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/accounttax/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/accounttax/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Accounttax = Resource$Accounttax;\n    class Resource$Buyongoogleprograms {\n        constructor(context) {\n            this.context = context;\n        }\n        activate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/activate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        onboard(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/onboard').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        pause(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/pause').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestreview(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/buyongoogleprograms/{regionCode}/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionCode'],\n                pathParams: ['merchantId', 'regionCode'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Buyongoogleprograms = Resource$Buyongoogleprograms;\n    class Resource$Collections {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/collections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/collections/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'collectionId'],\n                pathParams: ['collectionId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/collections/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'collectionId'],\n                pathParams: ['collectionId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/collections').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Collections = Resource$Collections;\n    class Resource$Collectionstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/collectionstatuses/{collectionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'collectionId'],\n                pathParams: ['collectionId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/collectionstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Collectionstatuses = Resource$Collectionstatuses;\n    class Resource$Conversionsources {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'conversionSourceId'],\n                pathParams: ['conversionSourceId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'conversionSourceId'],\n                pathParams: ['conversionSourceId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/conversionsources').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'conversionSourceId'],\n                pathParams: ['conversionSourceId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        undelete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/conversionsources/{conversionSourceId}:undelete').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'conversionSourceId'],\n                pathParams: ['conversionSourceId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Conversionsources = Resource$Conversionsources;\n    class Resource$Csses {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{cssGroupId}/csses/{cssDomainId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId', 'cssDomainId'],\n                pathParams: ['cssDomainId', 'cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{cssGroupId}/csses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId'],\n                pathParams: ['cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updatelabels(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['cssGroupId', 'cssDomainId'],\n                pathParams: ['cssDomainId', 'cssGroupId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Csses = Resource$Csses;\n    class Resource$Datafeeds {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeeds/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        fetchnow(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeeds/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeeds = Resource$Datafeeds;\n    class Resource$Datafeedstatuses {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/datafeedstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'datafeedId'],\n                pathParams: ['datafeedId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/datafeedstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Datafeedstatuses = Resource$Datafeedstatuses;\n    class Resource$Freelistingsprogram {\n        constructor(context) {\n            this.context = context;\n            this.checkoutsettings = new Resource$Freelistingsprogram$Checkoutsettings(this.context);\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/freelistingsprogram').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestreview(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/freelistingsprogram/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Freelistingsprogram = Resource$Freelistingsprogram;\n    class Resource$Freelistingsprogram$Checkoutsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/freelistingsprogram/checkoutsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Freelistingsprogram$Checkoutsettings = Resource$Freelistingsprogram$Checkoutsettings;\n    class Resource$Liasettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getaccessiblegmbaccounts(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listposdataproviders(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/liasettings/posdataproviders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestgmbaccess(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'gmbEmail'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestinventoryverification(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'country', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setinventoryverificationcontact(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [\n                    'merchantId',\n                    'accountId',\n                    'country',\n                    'language',\n                    'contactName',\n                    'contactEmail',\n                ],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setomnichannelexperience(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setomnichannelexperience').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setposdataprovider(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId', 'country'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/liasettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Liasettings = Resource$Liasettings;\n    class Resource$Localinventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/localinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/products/{productId}/localinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Localinventory = Resource$Localinventory;\n    class Resource$Merchantsupport {\n        constructor(context) {\n            this.context = context;\n        }\n        renderaccountissues(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/merchantsupport/renderaccountissues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        renderproductissues(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/merchantsupport/renderproductissues/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Merchantsupport = Resource$Merchantsupport;\n    class Resource$Orderinvoices {\n        constructor(context) {\n            this.context = context;\n        }\n        createchargeinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        createrefundinvoice(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderinvoices = Resource$Orderinvoices;\n    class Resource$Orderreports {\n        constructor(context) {\n            this.context = context;\n        }\n        listdisbursements(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreports/disbursements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listtransactions(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'disbursementId'],\n                pathParams: ['disbursementId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreports = Resource$Orderreports;\n    class Resource$Orderreturns {\n        constructor(context) {\n            this.context = context;\n            this.labels = new Resource$Orderreturns$Labels(this.context);\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        createorderreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/createOrderReturn').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns/{returnId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orderreturns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        process(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}/process').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreturns = Resource$Orderreturns;\n    class Resource$Orderreturns$Labels {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orderreturns/{returnId}/labels').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnId'],\n                pathParams: ['merchantId', 'returnId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orderreturns$Labels = Resource$Orderreturns$Labels;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        acknowledge(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/acknowledge').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        advancetestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/advance').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        cancel(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/cancel').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        cancellineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        canceltestorderbycustomer(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        captureOrder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/captureOrder').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        createtestorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/testorders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        createtestreturn(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/testreturn').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getbymerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'merchantOrderId'],\n                pathParams: ['merchantId', 'merchantOrderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        gettestordertemplate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/testordertemplates/{templateName}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'templateName'],\n                pathParams: ['merchantId', 'templateName'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        instorerefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        refunditem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/orders/{orderId}/refunditem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        refundorder(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/refundorder').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        rejectreturnlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        returnrefundlineitem(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        setlineitemmetadata(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        shiplineitems(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/shipLineItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updatelineitemshippingdetails(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updatemerchantorderid(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateshipment(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/orders/{orderId}/updateShipment').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'orderId'],\n                pathParams: ['merchantId', 'orderId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Orders = Resource$Orders;\n    class Resource$Ordertrackingsignals {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/ordertrackingsignals').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Ordertrackingsignals = Resource$Ordertrackingsignals;\n    class Resource$Pos {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/pos/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId', 'storeCode'],\n                pathParams: ['merchantId', 'storeCode', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        inventory(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/pos/{targetMerchantId}/store').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        sale(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pos/{targetMerchantId}/sale').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'targetMerchantId'],\n                pathParams: ['merchantId', 'targetMerchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Pos = Resource$Pos;\n    class Resource$Productdeliverytime {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productdeliverytime').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/productdeliverytime/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/productdeliverytime/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Productdeliverytime = Resource$Productdeliverytime;\n    class Resource$Products {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/products/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/products/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Products = Resource$Products;\n    class Resource$Productstatuses {\n        constructor(context) {\n            this.context = context;\n            this.repricingreports = new Resource$Productstatuses$Repricingreports(this.context);\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/productstatuses/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses/{productId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/productstatuses').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Productstatuses = Resource$Productstatuses;\n    class Resource$Productstatuses$Repricingreports {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/productstatuses/{productId}/repricingreports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Productstatuses$Repricingreports = Resource$Productstatuses$Repricingreports;\n    class Resource$Promotions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/promotions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/promotions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'id'],\n                pathParams: ['id', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/promotions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Promotions = Resource$Promotions;\n    class Resource$Pubsubnotificationsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/pubsubnotificationsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Pubsubnotificationsettings = Resource$Pubsubnotificationsettings;\n    class Resource$Quotas {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/quotas').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Quotas = Resource$Quotas;\n    class Resource$Recommendations {\n        constructor(context) {\n            this.context = context;\n        }\n        generate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/recommendations/generate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        reportInteraction(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/recommendations/reportInteraction').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Recommendations = Resource$Recommendations;\n    class Resource$Regionalinventory {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/regionalinventory/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/products/{productId}/regionalinventory').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'productId'],\n                pathParams: ['merchantId', 'productId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Regionalinventory = Resource$Regionalinventory;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/regions/{regionId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'regionId'],\n                pathParams: ['merchantId', 'regionId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Regions = Resource$Regions;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n        }\n        search(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/reports/search').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Reports = Resource$Reports;\n    class Resource$Repricingrules {\n        constructor(context) {\n            this.context = context;\n            this.repricingreports = new Resource$Repricingrules$Repricingreports(this.context);\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/repricingrules/{ruleId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Repricingrules = Resource$Repricingrules;\n    class Resource$Repricingrules$Repricingreports {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/repricingrules/{ruleId}/repricingreports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'ruleId'],\n                pathParams: ['merchantId', 'ruleId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Repricingrules$Repricingreports = Resource$Repricingrules$Repricingreports;\n    class Resource$Returnaddress {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/returnaddress/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnAddressId'],\n                pathParams: ['merchantId', 'returnAddressId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnaddress/{returnAddressId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnAddressId'],\n                pathParams: ['merchantId', 'returnAddressId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnaddress').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Returnaddress = Resource$Returnaddress;\n    class Resource$Returnpolicy {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/returnpolicy/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicy').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Returnpolicy = Resource$Returnpolicy;\n    class Resource$Returnpolicyonline {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/returnpolicyonline').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/returnpolicyonline/{returnPolicyId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'returnPolicyId'],\n                pathParams: ['merchantId', 'returnPolicyId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Returnpolicyonline = Resource$Returnpolicyonline;\n    class Resource$Settlementreports {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/settlementreports/{settlementId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'settlementId'],\n                pathParams: ['merchantId', 'settlementId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/settlementreports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Settlementreports = Resource$Settlementreports;\n    class Resource$Settlementtransactions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'settlementId'],\n                pathParams: ['merchantId', 'settlementId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Settlementtransactions = Resource$Settlementtransactions;\n    class Resource$Shippingsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        custombatch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/shippingsettings/batch').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getsupportedcarriers(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getsupportedholidays(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedHolidays').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getsupportedpickupservices(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/supportedPickupServices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/shippingsettings').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shippingsettings/{accountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['merchantId', 'accountId'],\n                pathParams: ['accountId', 'merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Shippingsettings = Resource$Shippingsettings;\n    class Resource$Shoppingadsprogram {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/content/v2.1/{merchantId}/shoppingadsprogram').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        requestreview(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://shoppingcontent.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/content/v2.1/{merchantId}/shoppingadsprogram/requestreview').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['merchantId'],\n                pathParams: ['merchantId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    content_v2_1.Resource$Shoppingadsprogram = Resource$Shoppingadsprogram;\n})(content_v2_1 || (exports.content_v2_1 = content_v2_1 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}