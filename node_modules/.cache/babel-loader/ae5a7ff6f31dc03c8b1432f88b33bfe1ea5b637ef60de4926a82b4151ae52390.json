{"ast":null,"code":"var _jsxFileName = \"/home/nomade00/\\xC1rea de Trabalho/Trabalho James/trabcar/src/pages/Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroHorario() {\n  _s();\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [setSelectedCurso] = useState('');\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [horaInicial, setHoraInicial] = useState([]);\n  const [horaFinal, setHoraFinal] = useState([]);\n  const [date, setDate] = useState(new Date()); // Adicione o estado para a data selecionada\n\n  useEffect(() => {\n    const storedHorarios = JSON.parse(localStorage.getItem('Horarios')) || [];\n    setHorarios(storedHorarios);\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setNomeDesafios(storedDesafios);\n  }, []);\n  useEffect(() => {\n    // Recuperar eventos específicos da data atual\n    const events = horarios.filter(evento => {\n      const eventoDate = new Date(evento.horaInicial); // Ajuste de acordo com a propriedade que contém a data/hora\n      return eventoDate.getDate() === date.getDate() && eventoDate.getMonth() === date.getMonth() && eventoDate.getFullYear() === date.getFullYear();\n    });\n    console.log('Eventos para a data selecionada:', events);\n  }, [date, horarios]);\n  const adicionarHorarios = () => {\n    if (selectedProfessor.trim() && horaFinal.trim() && horaInicial.trim() && selectedSala.trim()) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal\n      };\n      setHorarios(prevHorarios => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedCurso('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n    }\n  };\n  const excluirHorario = index => {\n    const NovoHorario = [...horarios];\n    NovoHorario.splice(index, 1);\n    setHorarios(NovoHorario);\n    localStorage.setItem('Horarios', JSON.stringify(NovoHorario));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cad\",\n      className: \"form-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Horario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tabelaPessoas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Agenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        className: \"table-container\",\n        onChange: setDate // Atualiza a data ao selecionar no calendário\n        ,\n        value: date,\n        tileContent: ({\n          date,\n          view\n        }) => {\n          if (view === 'month') {\n            const events = horarios.filter(evento => {\n              const eventoDate = new Date(evento.horaInicial);\n              return eventoDate.getDate() === date.getDate() && eventoDate.getMonth() === date.getMonth() && eventoDate.getFullYear() === date.getFullYear();\n            });\n            return events.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [events.length, \" eventos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 42\n            }, this) : null;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroHorario, \"50mvgRkDptJ4YYqr5B8bLOgVcP0=\");\n_c = CadastroHorario;\nexport default CadastroHorario;\nvar _c;\n$RefreshReg$(_c, \"CadastroHorario\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","CadastroHorario","_s","selectedProfessor","setSelectedProfessor","selectedSala","setSelectedSala","selectedNomeDesafio","setSelectedNomeDesafio","setSelectedCurso","professores","setProfessores","salas","setSalas","nomeDesafios","setNomeDesafios","horarios","setHorarios","horaInicial","setHoraInicial","horaFinal","setHoraFinal","date","setDate","Date","storedHorarios","JSON","parse","localStorage","getItem","storedProfessores","storedSalas","storedDesafios","events","filter","evento","eventoDate","getDate","getMonth","getFullYear","console","log","adicionarHorarios","trim","novoHorario","id","getTime","professor","sala","desafio","prevHorarios","newHorarios","setItem","stringify","excluirHorario","index","NovoHorario","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","tileContent","view","length","_c","$RefreshReg$"],"sources":["/home/nomade00/Área de Trabalho/Trabalho James/trabcar/src/pages/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\n\nfunction CadastroHorario() {\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [setSelectedCurso] = useState('');\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [horaInicial, setHoraInicial] = useState([]);\n  const [horaFinal, setHoraFinal] = useState([]);\n  const [date, setDate] = useState(new Date()); // Adicione o estado para a data selecionada\n\n  useEffect(() => {\n    const storedHorarios = JSON.parse(localStorage.getItem('Horarios')) || [];\n    setHorarios(storedHorarios);\n\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setNomeDesafios(storedDesafios);\n  }, []);\n\n  useEffect(() => {\n    // Recuperar eventos específicos da data atual\n    const events = horarios.filter((evento) => {\n      const eventoDate = new Date(evento.horaInicial); // Ajuste de acordo com a propriedade que contém a data/hora\n      return (\n        eventoDate.getDate() === date.getDate() &&\n        eventoDate.getMonth() === date.getMonth() &&\n        eventoDate.getFullYear() === date.getFullYear()\n      );\n    });\n\n    console.log('Eventos para a data selecionada:', events);\n  }, [date, horarios]);\n\n  const adicionarHorarios = () => {\n    if (\n      selectedProfessor.trim() &&\n      horaFinal.trim() &&\n      horaInicial.trim() &&\n      selectedSala.trim()\n    ) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n      };\n\n      setHorarios((prevHorarios) => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedCurso('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n    }\n  };\n\n  const excluirHorario = (index) => {\n    const NovoHorario = [...horarios];\n    NovoHorario.splice(index, 1);\n    setHorarios(NovoHorario);\n    localStorage.setItem('Horarios', JSON.stringify(NovoHorario));\n  };\n\n  return (\n    <div>\n      <div id=\"Cad\" className=\"form-container\">\n        {/* Restante do seu código */}\n      </div>\n\n      <div className=\"table-container\">\n        <h2>Horario</h2>\n        <table id=\"tabelaPessoas\">\n          {/* Restante do seu código */}\n        </table>\n      </div>\n\n      <div>\n        <h2>Agenda</h2>\n        <Calendar\n          className=\"table-container\"\n          onChange={setDate} // Atualiza a data ao selecionar no calendário\n          value={date}\n          tileContent={({ date, view }) => {\n            if (view === 'month') {\n              const events = horarios.filter((evento) => {\n                const eventoDate = new Date(evento.horaInicial);\n                return (\n                  eventoDate.getDate() === date.getDate() &&\n                  eventoDate.getMonth() === date.getMonth() &&\n                  eventoDate.getFullYear() === date.getFullYear()\n                );\n              });\n\n              return events.length > 0 ? <p>{events.length} eventos</p> : null;\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CadastroHorario;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}