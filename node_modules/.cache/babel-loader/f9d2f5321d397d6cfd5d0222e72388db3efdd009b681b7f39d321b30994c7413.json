{"ast":null,"code":"var _jsxFileName = \"/home/nomade00/\\xC1rea de Trabalho/Trabalho James/trabcar/src/pages/Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReactTooltip from 'react-tooltip';\nimport 'react-tooltip/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroHorario() {\n  _s();\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [horaInicial, setHoraInicial] = useState('');\n  const [horaFinal, setHoraFinal] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [agenda, setAgenda] = useState([]);\n  useEffect(() => {\n    const storedHorarios = JSON.parse(localStorage.getItem('Horarios')) || [];\n    setHorarios(storedHorarios);\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setNomeDesafios(storedDesafios);\n    const storedAgenda = JSON.parse(localStorage.getItem('Agenda')) || [];\n    setAgenda(storedAgenda);\n  }, []);\n  const adicionarHorario = () => {\n    if (selectedProfessor.trim() && horaFinal.trim() && horaInicial.trim() && selectedSala.trim()) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal\n      };\n      setHorarios(prevHorarios => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n      const novoEventoAgenda = {\n        id: new Date().getTime(),\n        title: `Aula de ${selectedNomeDesafio} com ${selectedProfessor}`,\n        description: `Horário: ${horaInicial} - ${horaFinal}\\nSala: ${selectedSala}`,\n        date: date\n      };\n      setAgenda(prevAgenda => {\n        const newAgenda = [...prevAgenda, novoEventoAgenda];\n        localStorage.setItem('Agenda', JSON.stringify(newAgenda));\n        return newAgenda;\n      });\n      limparCampos();\n    }\n  };\n  const excluirHorario = id => {\n    const novoHorario = horarios.filter(horario => horario.id !== id);\n    setHorarios(novoHorario);\n    localStorage.setItem('Horarios', JSON.stringify(novoHorario));\n    const novoEventoAgenda = agenda.filter(evento => evento.id !== id);\n    setAgenda(novoEventoAgenda);\n    localStorage.setItem('Agenda', JSON.stringify(novoEventoAgenda));\n  };\n  const handleDateChange = novaData => {\n    setDate(novaData);\n  };\n  const limparCampos = () => {\n    setSelectedProfessor('');\n    setHoraInicial('');\n    setHoraFinal('');\n    setSelectedSala('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cad\",\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"table-container\",\n          children: \"Agenda:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"table-container\",\n          onChange: handleDateChange,\n          value: date,\n          tileContent: ({\n            date,\n            view\n          }) => {\n            if (view === 'month') {\n              const eventosNoDia = agenda.filter(evento => {\n                const eventoDate = new Date(evento.date);\n                return eventoDate.getDate() === date.getDate() && eventoDate.getMonth() === date.getMonth() && eventoDate.getFullYear() === date.getFullYear();\n              });\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                \"data-tip\": eventosNoDia.length > 0 ? `${eventosNoDia.length} eventos` : '',\n                children: eventosNoDia.length > 0 ? '•' : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroHorario, \"N5CmWwSY7REKttgVOIeDh+9RUEg=\");\n_c = CadastroHorario;\nexport default CadastroHorario;\nvar _c;\n$RefreshReg$(_c, \"CadastroHorario\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","ReactTooltip","jsxDEV","_jsxDEV","CadastroHorario","_s","selectedProfessor","setSelectedProfessor","selectedSala","setSelectedSala","selectedNomeDesafio","setSelectedNomeDesafio","horaInicial","setHoraInicial","horaFinal","setHoraFinal","date","setDate","Date","professores","setProfessores","salas","setSalas","nomeDesafios","setNomeDesafios","horarios","setHorarios","agenda","setAgenda","storedHorarios","JSON","parse","localStorage","getItem","storedProfessores","storedSalas","storedDesafios","storedAgenda","adicionarHorario","trim","novoHorario","id","getTime","professor","sala","desafio","prevHorarios","newHorarios","setItem","stringify","novoEventoAgenda","title","description","prevAgenda","newAgenda","limparCampos","excluirHorario","filter","horario","evento","handleDateChange","novaData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","tileContent","view","eventosNoDia","eventoDate","getDate","getMonth","getFullYear","length","_c","$RefreshReg$"],"sources":["/home/nomade00/Área de Trabalho/Trabalho James/trabcar/src/pages/Inicio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport ReactTooltip from 'react-tooltip';\nimport 'react-tooltip/dist/index.css';\n\nfunction CadastroHorario() {\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [horaInicial, setHoraInicial] = useState('');\n  const [horaFinal, setHoraFinal] = useState('');\n  const [date, setDate] = useState(new Date());\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [agenda, setAgenda] = useState([]);\n\n  useEffect(() => {\n    const storedHorarios = JSON.parse(localStorage.getItem('Horarios')) || [];\n    setHorarios(storedHorarios);\n\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setNomeDesafios(storedDesafios);\n\n    const storedAgenda = JSON.parse(localStorage.getItem('Agenda')) || [];\n    setAgenda(storedAgenda);\n  }, []);\n\n  const adicionarHorario = () => {\n    if (\n      selectedProfessor.trim() &&\n      horaFinal.trim() &&\n      horaInicial.trim() &&\n      selectedSala.trim()\n    ) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n      };\n\n      setHorarios((prevHorarios) => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n\n      const novoEventoAgenda = {\n        id: new Date().getTime(),\n        title: `Aula de ${selectedNomeDesafio} com ${selectedProfessor}`,\n        description: `Horário: ${horaInicial} - ${horaFinal}\\nSala: ${selectedSala}`,\n        date: date,\n      };\n\n      setAgenda((prevAgenda) => {\n        const newAgenda = [...prevAgenda, novoEventoAgenda];\n        localStorage.setItem('Agenda', JSON.stringify(newAgenda));\n        return newAgenda;\n      });\n\n      limparCampos();\n    }\n  };\n\n  const excluirHorario = (id) => {\n    const novoHorario = horarios.filter((horario) => horario.id !== id);\n    setHorarios(novoHorario);\n    localStorage.setItem('Horarios', JSON.stringify(novoHorario));\n\n    const novoEventoAgenda = agenda.filter((evento) => evento.id !== id);\n    setAgenda(novoEventoAgenda);\n    localStorage.setItem('Agenda', JSON.stringify(novoEventoAgenda));\n  };\n\n  const handleDateChange = (novaData) => {\n    setDate(novaData);\n  };\n\n  const limparCampos = () => {\n    setSelectedProfessor('');\n    setHoraInicial('');\n    setHoraFinal('');\n    setSelectedSala('');\n  };\n\n  return (\n    <div>\n      <div id='Cad' className=\"form-container\">\n        {/* ... (restante do JSX) */}\n        <div>\n          <h2 className=\"table-container\">Agenda:</h2>\n          <Calendar className=\"table-container\" \n            onChange={handleDateChange}\n            value={date}\n            tileContent={({ date, view }) => {\n              if (view === 'month') {\n                const eventosNoDia = agenda.filter((evento) => {\n                  const eventoDate = new Date(evento.date);\n                  return (\n                    eventoDate.getDate() === date.getDate() &&\n                    eventoDate.getMonth() === date.getMonth() &&\n                    eventoDate.getFullYear() === date.getFullYear()\n                  );\n                });\n\n                return (\n                  <div data-tip={eventosNoDia.length > 0 ? `${eventosNoDia.length} eventos` : ''}>\n                    {eventosNoDia.length > 0 ? '•' : null}\n                  </div>\n                );\n              }\n            }}\n          />\n          <ReactTooltip />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CadastroHorario;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}