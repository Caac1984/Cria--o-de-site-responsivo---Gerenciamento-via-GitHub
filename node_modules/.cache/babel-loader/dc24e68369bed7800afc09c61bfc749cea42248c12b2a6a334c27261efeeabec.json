{"ast":null,"code":"var _jsxFileName = \"/home/nomade00/\\xC1rea de Trabalho/Trabalho James/trabcar/src/pages/CadHorario.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroEnsalamento() {\n  _s();\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedPeriodo, setSelectedPeriodo] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [curso, setCurso] = useState('');\n  const [horario, setHorario] = useState('');\n  const [data, setData] = useState('');\n  const [horaInicial, setHoraInicial] = useState('');\n  const [horaFinal, setHoraFinal] = useState('');\n  const [ensalamentos, setEnsalamentos] = useState([]);\n  const [professores, setProfessores] = useState([]);\n  const [periodos, setPeriodos] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [desafios, setDesafios] = useState([]);\n  useEffect(() => {\n    const storedEnsalamentos = JSON.parse(localStorage.getItem('Ensalamentos')) || [];\n    setEnsalamentos(storedEnsalamentos);\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n    const storedPeriodos = JSON.parse(localStorage.getItem('Periodos')) || [];\n    setPeriodos(storedPeriodos);\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setDesafios(storedDesafios);\n  }, []);\n  const adicionarEnsalamento = () => {\n    if (selectedProfessor.trim() && selectedNomeDesafio.trim() && selectedPeriodo.trim() && curso.trim() && horario.trim() && data.trim() && horaInicial.trim() && horaFinal.trim() && selectedSala.trim()) {\n      const novoEnsalamento = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        desafio: selectedNomeDesafio,\n        periodo: selectedPeriodo,\n        curso: curso,\n        horario: horario,\n        data: data,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n        sala: selectedSala\n      };\n      setEnsalamentos(prevEnsalamentos => {\n        const newEnsalamentos = [...prevEnsalamentos, novoEnsalamento];\n        localStorage.setItem('Ensalamentos', JSON.stringify(newEnsalamentos));\n        return newEnsalamentos;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedNomeDesafio('');\n      setSelectedPeriodo('');\n      setCurso('');\n      setHorario('');\n      setData('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n    }\n  };\n  const excluirEnsalamento = id => {\n    const novoEnsalamento = ensalamentos.filter(ensalamento => ensalamento.id !== id);\n    setEnsalamentos(novoEnsalamento);\n    localStorage.setItem('Ensalamentos', JSON.stringify(novoEnsalamento));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cad\",\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: adicionarEnsalamento,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ensalamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"tabelaPessoas\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ensalamentos.map(ensalamento => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"excluir-btn\",\n                onClick: () => excluirEnsalamento(ensalamento.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, ensalamento.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroEnsalamento, \"FCOaw3J2QqoBdaVVNnuWaYGwk5k=\");\n_c = CadastroEnsalamento;\nexport default CadastroEnsalamento;\nvar _c;\n$RefreshReg$(_c, \"CadastroEnsalamento\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CadastroEnsalamento","_s","selectedProfessor","setSelectedProfessor","selectedPeriodo","setSelectedPeriodo","selectedSala","setSelectedSala","selectedNomeDesafio","setSelectedNomeDesafio","curso","setCurso","horario","setHorario","data","setData","horaInicial","setHoraInicial","horaFinal","setHoraFinal","ensalamentos","setEnsalamentos","professores","setProfessores","periodos","setPeriodos","salas","setSalas","desafios","setDesafios","storedEnsalamentos","JSON","parse","localStorage","getItem","storedProfessores","storedPeriodos","storedSalas","storedDesafios","adicionarEnsalamento","trim","novoEnsalamento","id","Date","getTime","professor","desafio","periodo","sala","prevEnsalamentos","newEnsalamentos","setItem","stringify","excluirEnsalamento","filter","ensalamento","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/home/nomade00/Área de Trabalho/Trabalho James/trabcar/src/pages/CadHorario.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CadastroEnsalamento() {\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedPeriodo, setSelectedPeriodo] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [curso, setCurso] = useState('');\n  const [horario, setHorario] = useState('');\n  const [data, setData] = useState('');\n  const [horaInicial, setHoraInicial] = useState('');\n  const [horaFinal, setHoraFinal] = useState('');\n  const [ensalamentos, setEnsalamentos] = useState([]);\n  const [professores, setProfessores] = useState([]);\n  const [periodos, setPeriodos] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [desafios, setDesafios] = useState([]);\n\n  useEffect(() => {\n    const storedEnsalamentos = JSON.parse(localStorage.getItem('Ensalamentos')) || [];\n    setEnsalamentos(storedEnsalamentos);\n\n    const storedProfessores = JSON.parse(localStorage.getItem('Professores')) || [];\n    setProfessores(storedProfessores);\n\n    const storedPeriodos = JSON.parse(localStorage.getItem('Periodos')) || [];\n    setPeriodos(storedPeriodos);\n\n    const storedSalas = JSON.parse(localStorage.getItem('Salas')) || [];\n    setSalas(storedSalas);\n\n    const storedDesafios = JSON.parse(localStorage.getItem('Desafios')) || [];\n    setDesafios(storedDesafios);\n  }, []);\n\n  const adicionarEnsalamento = () => {\n    if (\n      selectedProfessor.trim() &&\n      selectedNomeDesafio.trim() &&\n      selectedPeriodo.trim() &&\n      curso.trim() &&\n      horario.trim() &&\n      data.trim() &&\n      horaInicial.trim() &&\n      horaFinal.trim() &&\n      selectedSala.trim()\n    ) {\n      const novoEnsalamento = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        desafio: selectedNomeDesafio,\n        periodo: selectedPeriodo,\n        curso: curso,\n        horario: horario,\n        data: data,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n        sala: selectedSala,\n      };\n\n      setEnsalamentos((prevEnsalamentos) => {\n        const newEnsalamentos = [...prevEnsalamentos, novoEnsalamento];\n        localStorage.setItem('Ensalamentos', JSON.stringify(newEnsalamentos));\n        return newEnsalamentos;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedNomeDesafio('');\n      setSelectedPeriodo('');\n      setCurso('');\n      setHorario('');\n      setData('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n    }\n  };\n\n  const excluirEnsalamento = (id) => {\n    const novoEnsalamento = ensalamentos.filter((ensalamento) => ensalamento.id !== id);\n    setEnsalamentos(novoEnsalamento);\n    localStorage.setItem('Ensalamentos', JSON.stringify(novoEnsalamento));\n  };\n\n  return (\n    <div>\n      <div id='Cad' className=\"form-container\">\n        {/* ... Código de seleção e entrada de dados ... */}\n        <div>\n          <button onClick={adicionarEnsalamento}>Adicionar</button>\n        </div>\n      </div>\n      <div className=\"table-container\">\n        <h2>Ensalamento</h2>\n        <table id=\"tabelaPessoas\">\n          {/* ... Cabeçalho da tabela ... */}\n          <tbody>\n            {ensalamentos.map((ensalamento) => (\n              <tr key={ensalamento.id}>\n                {/* ... Colunas da tabela ... */}\n                <td>\n                  <button className=\"excluir-btn\" onClick={() => excluirEnsalamento(ensalamento.id)}>\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default CadastroEnsalamento;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMiC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE;IACjFb,eAAe,CAACS,kBAAkB,CAAC;IAEnC,MAAMK,iBAAiB,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE;IAC/EX,cAAc,CAACY,iBAAiB,CAAC;IAEjC,MAAMC,cAAc,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACzET,WAAW,CAACW,cAAc,CAAC;IAE3B,MAAMC,WAAW,GAAGN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACnEP,QAAQ,CAACU,WAAW,CAAC;IAErB,MAAMC,cAAc,GAAGP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACzEL,WAAW,CAACS,cAAc,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IACErC,iBAAiB,CAACsC,IAAI,CAAC,CAAC,IACxBhC,mBAAmB,CAACgC,IAAI,CAAC,CAAC,IAC1BpC,eAAe,CAACoC,IAAI,CAAC,CAAC,IACtB9B,KAAK,CAAC8B,IAAI,CAAC,CAAC,IACZ5B,OAAO,CAAC4B,IAAI,CAAC,CAAC,IACd1B,IAAI,CAAC0B,IAAI,CAAC,CAAC,IACXxB,WAAW,CAACwB,IAAI,CAAC,CAAC,IAClBtB,SAAS,CAACsB,IAAI,CAAC,CAAC,IAChBlC,YAAY,CAACkC,IAAI,CAAC,CAAC,EACnB;MACA,MAAMC,eAAe,GAAG;QACtBC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QACxBC,SAAS,EAAE3C,iBAAiB;QAC5B4C,OAAO,EAAEtC,mBAAmB;QAC5BuC,OAAO,EAAE3C,eAAe;QACxBM,KAAK,EAAEA,KAAK;QACZE,OAAO,EAAEA,OAAO;QAChBE,IAAI,EAAEA,IAAI;QACVE,WAAW,EAAEA,WAAW;QACxBE,SAAS,EAAEA,SAAS;QACpB8B,IAAI,EAAE1C;MACR,CAAC;MAEDe,eAAe,CAAE4B,gBAAgB,IAAK;QACpC,MAAMC,eAAe,GAAG,CAAC,GAAGD,gBAAgB,EAAER,eAAe,CAAC;QAC9DR,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEpB,IAAI,CAACqB,SAAS,CAACF,eAAe,CAAC,CAAC;QACrE,OAAOA,eAAe;MACxB,CAAC,CAAC;;MAEF;MACA/C,oBAAoB,CAAC,EAAE,CAAC;MACxBM,sBAAsB,CAAC,EAAE,CAAC;MAC1BJ,kBAAkB,CAAC,EAAE,CAAC;MACtBM,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdE,OAAO,CAAC,EAAE,CAAC;MACXE,cAAc,CAAC,EAAE,CAAC;MAClBE,YAAY,CAAC,EAAE,CAAC;MAChBZ,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,MAAM8C,kBAAkB,GAAIX,EAAE,IAAK;IACjC,MAAMD,eAAe,GAAGrB,YAAY,CAACkC,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACb,EAAE,KAAKA,EAAE,CAAC;IACnFrB,eAAe,CAACoB,eAAe,CAAC;IAChCR,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEpB,IAAI,CAACqB,SAAS,CAACX,eAAe,CAAC,CAAC;EACvE,CAAC;EAED,oBACE1C,OAAA;IAAAyD,QAAA,gBACEzD,OAAA;MAAK2C,EAAE,EAAC,KAAK;MAACe,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAEtCzD,OAAA;QAAAyD,QAAA,eACEzD,OAAA;UAAQ2D,OAAO,EAAEnB,oBAAqB;UAAAiB,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN/D,OAAA;MAAK0D,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC9BzD,OAAA;QAAAyD,QAAA,EAAI;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB/D,OAAA;QAAO2C,EAAE,EAAC,eAAe;QAAAc,QAAA,eAEvBzD,OAAA;UAAAyD,QAAA,EACGpC,YAAY,CAAC2C,GAAG,CAAER,WAAW,iBAC5BxD,OAAA;YAAAyD,QAAA,eAEEzD,OAAA;cAAAyD,QAAA,eACEzD,OAAA;gBAAQ0D,SAAS,EAAC,aAAa;gBAACC,OAAO,EAAEA,CAAA,KAAML,kBAAkB,CAACE,WAAW,CAACb,EAAE,CAAE;gBAAAc,QAAA,EAAC;cAEnF;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP;UAAC,GANEP,WAAW,CAACb,EAAE;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOnB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7D,EAAA,CA/GQD,mBAAmB;AAAAgE,EAAA,GAAnBhE,mBAAmB;AAiH5B,eAAeA,mBAAmB;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}