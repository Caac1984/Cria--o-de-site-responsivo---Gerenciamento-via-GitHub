{"ast":null,"code":"var _jsxFileName = \"/home/nomade00/\\xC1rea de Trabalho/Trabalho James/trabcar/src/pages/CadHorario.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction CadastroHorario() {\n  _s();\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [setSelectedCurso] = useState('');\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [horaInicial, setHoraInicial] = useState([]);\n  const [horaFinal, setHoraFinal] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    // ... (seu código existente)\n  }, []);\n  const adicionarHorarios = () => {\n    if (selectedProfessor.trim() && horaFinal.trim() && horaInicial.trim() && selectedSala.trim()) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n        start: selectedDate,\n        // Adicionando a data ao novo horário\n        end: moment(selectedDate).add(1, 'hour').toDate() // Adicionando 1 hora para o final\n      };\n\n      setHorarios(prevHorarios => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedCurso('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n      setSelectedDate(new Date()); // Limpar a data selecionada\n    }\n  };\n\n  const excluirHorario = index => {\n    const novoHorario = [...horarios];\n    novoHorario.splice(index, 1);\n    setHorarios(novoHorario);\n    localStorage.setItem('Horario', JSON.stringify(novoHorario));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cad\",\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Selecione um Professor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"professor\",\n        value: selectedProfessor,\n        onChange: e => setSelectedProfessor(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Selecione um professor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), professores.map((professor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: professor.nomeProfessor,\n          children: professor.nomeProfessor\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Selecione a Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: horarios,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          onSelectEvent: event => console.log(event) // Adicione um manipulador para eventos do calendário se necessário\n          ,\n          selectable: true,\n          onSelectSlot: slotInfo => setSelectedDate(slotInfo.start)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adicionarHorarios,\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CadastroHorario, \"lUR1W9hEKgm9Z9eccAfFYH+El6Q=\");\n_c = CadastroHorario;\nexport default CadastroHorario;\nvar _c;\n$RefreshReg$(_c, \"CadastroHorario\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","CadastroHorario","_s","selectedProfessor","setSelectedProfessor","selectedSala","setSelectedSala","selectedNomeDesafio","setSelectedNomeDesafio","setSelectedCurso","professores","setProfessores","salas","setSalas","nomeDesafios","setNomeDesafios","horarios","setHorarios","horaInicial","setHoraInicial","horaFinal","setHoraFinal","selectedDate","setSelectedDate","Date","adicionarHorarios","trim","novoHorario","id","getTime","professor","sala","desafio","start","end","add","toDate","prevHorarios","newHorarios","localStorage","setItem","JSON","stringify","excluirHorario","index","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","nomeProfessor","events","startAccessor","endAccessor","onSelectEvent","event","console","log","selectable","onSelectSlot","slotInfo","onClick","_c","$RefreshReg$"],"sources":["/home/nomade00/Área de Trabalho/Trabalho James/trabcar/src/pages/CadHorario.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nfunction CadastroHorario() {\n  const [selectedProfessor, setSelectedProfessor] = useState('');\n  const [selectedSala, setSelectedSala] = useState('');\n  const [selectedNomeDesafio, setSelectedNomeDesafio] = useState('');\n  const [setSelectedCurso] = useState('');\n  const [professores, setProfessores] = useState([]);\n  const [salas, setSalas] = useState([]);\n  const [nomeDesafios, setNomeDesafios] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [horaInicial, setHoraInicial] = useState([]);\n  const [horaFinal, setHoraFinal] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    // ... (seu código existente)\n  }, []);\n\n  const adicionarHorarios = () => {\n    if (\n      selectedProfessor.trim() &&\n      horaFinal.trim() &&\n      horaInicial.trim() &&\n      selectedSala.trim()\n    ) {\n      const novoHorario = {\n        id: new Date().getTime(),\n        professor: selectedProfessor,\n        sala: selectedSala,\n        desafio: selectedNomeDesafio,\n        horaInicial: horaInicial,\n        horaFinal: horaFinal,\n        start: selectedDate, // Adicionando a data ao novo horário\n        end: moment(selectedDate).add(1, 'hour').toDate(), // Adicionando 1 hora para o final\n      };\n\n      setHorarios((prevHorarios) => {\n        const newHorarios = [...prevHorarios, novoHorario];\n        localStorage.setItem('Horarios', JSON.stringify(newHorarios));\n        return newHorarios;\n      });\n\n      // Limpa os campos após adicionar\n      setSelectedProfessor('');\n      setSelectedCurso('');\n      setHoraInicial('');\n      setHoraFinal('');\n      setSelectedSala('');\n      setSelectedDate(new Date()); // Limpar a data selecionada\n    }\n  };\n\n  const excluirHorario = (index) => {\n    const novoHorario = [...horarios];\n    novoHorario.splice(index, 1);\n    setHorarios(novoHorario);\n    localStorage.setItem('Horario', JSON.stringify(novoHorario));\n  };\n\n  return (\n    <div>\n      <div id='Cad' className=\"form-container\">\n        <h4>Selecione um Professor:</h4>\n        <select\n          id=\"professor\"\n          value={selectedProfessor}\n          onChange={(e) => setSelectedProfessor(e.target.value)}\n        >\n          <option value=\"\" disabled>Selecione um professor</option>\n          {professores.map((professor, index) => (\n            <option key={index} value={professor.nomeProfessor}>{professor.nomeProfessor}</option>\n          ))}\n        </select>\n\n        {/* ... (seu código existente) */}\n\n        <div>\n          <h4>Selecione a Data:</h4>\n          <Calendar\n            localizer={localizer}\n            events={horarios}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            onSelectEvent={(event) => console.log(event)} // Adicione um manipulador para eventos do calendário se necessário\n            selectable\n            onSelectSlot={(slotInfo) => setSelectedDate(slotInfo.start)}\n          />\n        </div>\n\n        <button onClick={adicionarHorarios}>Adicionar</button>\n      </div>\n\n      <div className=\"table-container\">\n        {/* ... (seu código existente) */}\n      </div>\n    </div>\n  );\n}\n\nexport default CadastroHorario;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}